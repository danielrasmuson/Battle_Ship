{"name":"Battle Ship","tagline":"","body":"#Program Requirments\r\n##Two Functions You Need To make\r\n###Setup Board</h3>\r\n    -Name the function setup_YOURNAME() - setup_DAN()\r\n    -list a 10x10 board\r\n    -Put down five - 'A' - for Carrier\r\n    -Put down four - 'B' - for BattleShip\r\n    -Put down three - 'C' - for Cruiser\r\n    -Put down three - 'S' - for Submarine\r\n    -Put down two - 'D' - for Destroyer\r\n    -Returns the file path for the board you made\r\n    -You are responsible for providing a correct board (I dont check)\r\nSee Below For Information on pieces OR See Example \"testBoard.txt\"\r\n\r\n\r\n###Solve Board</h3>\r\n    -Name the function setup_YOURNAME() - solve_DAN()\r\n    -Your program will take an instance of the interface class\r\n    -You must use board.fireShot(x,y) - will return a string of one of three\r\n        -\"0\" - miss\r\n        -\"1\" - hit\r\n        -Name of the ship that was sunk (ex: \"Submarine\")\r\n    -You are responsible of keeping tracking of a mock board the getBoard function is only testing\r\n\r\n#HOW WILL THE GAME BE SCORED\r\n    -You will make a board for your opponent\r\n    -They will solve it and the number of turns will be added to there total\r\n    -This will loop 1000 times\r\n    -Then it will switch\r\n    -The person with the lowest score wins\r\n\r\n#RULES FOR BATTLESHIP\r\n##Rules for BattleShip (a Milton Bradley Game)\r\n\r\n###Game Objective</h3>\r\nThe object of Battleship is to try and sink all of the other player's before they sink all of your ships. All of the other player's ships are somewhere on his/her board. You try and hit them by calling out the coordinates of one of the squares on the board. The other player also tries to hit your ships by calling out coordinates. Neither you nor the other player can see the other's board so you must try to guess where they are. Each board in the physical game has two grids: the lower (horizontal) section for the player's ships and the upper part (vertical during play) for recording the player's guesses.\r\n\r\n###Starting a New Game</h3>\r\nEach player places the 5 ships somewhere on their board. The ships can only be placed vertically or horizontally. Diagonal placement is not allowed. No part of a ship may hang off the edge of the board. Ships may not overlap each other. No ships may be placed on another ship.\r\n\r\nOnce the guessing begins, the players may not move the ships.\r\n\r\nThe 5 ships are: Carrier (occupies 5 spaces), Battleship (4), Cruiser (3), Submarine (3), and Destroyer (2).\r\n\r\n###Playing the Game</h3>\r\nPlayer's take turns guessing by calling out the coordinates. The opponent responds with \"hit\" or \"miss\" as appropriate. Both players should mark their board with pegs: red for hit, white for miss. For example, if you call out F6 and your opponent does not have any ship located at F6, your opponent would respond with \"miss\". You record the miss F6 by placing a white peg on the lower part of your board at F6. Your opponent records the miss by placing.\r\n\r\nWhen all of the squares that one your ships occupies have been hit, the ship will be sunk. You should announce \"hit and sunk\". In the physical game, a red peg is placed on the top edge of the vertical board to indicate a sunk ship.\r\n\r\nAs soon as all of one player's ships have been sunk, the game ends.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}